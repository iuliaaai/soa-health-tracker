version: '3.8'

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - auth_service_1
      - auth_service_2
      - metrics_service_1
      - metrics_service_2
    networks:
      - backend
    restart: always

  auth_service_1:
    build: ./auth_service
    container_name: auth_service_1
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - backend

  auth_service_2:
    build: ./auth_service
    container_name: auth_service_2
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - backend

  metrics_service_1:
    build: ./metrics_service
    container_name: metrics_service_1
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - backend

  metrics_service_2:
    build: ./metrics_service
    container_name: metrics_service_2
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - backend

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: 12345pass
      POSTGRES_DB: health_tracker
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

volumes:
  postgres_data:

networks:
  backend:
